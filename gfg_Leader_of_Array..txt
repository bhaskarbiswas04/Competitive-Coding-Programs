// GeeksforGeeks - Leaders in an Array.
// Question Link - https://practice.geeksforgeeks.org/problems/leaders-in-an-array-1587115620/1/?track=md-arrays&batchId=144#

// Solution_1 : Brute Force Method.
import java.util.ArrayList;
import java.util.Scanner;

public class Main
{
	public static void main(String[] args) {
	    
	    Scanner in = new Scanner(System.in);
	    
	    System.out.println("Enter the Size of the Array : ");
	    int n = in.nextInt();
	    
	    int[] arr = new int[n];
	    System.out.println("Enter the elements of the array : ");
	    for(int i = 0; i<n; i++)
	    {
	        arr[i] = in.nextInt(); 
	    }
	    
	    ArrayList<Integer> a = new ArrayList<>();
        
        for(int i = 0; i<arr.length; i++)
        {
            int flag = 1;
            int j = i+1;
            while(j < arr.length)
            {
                if(arr[i] >= arr[j])
                {
                    j++;
                    flag = 1;
                }
                else
                {
                    flag = 0;
                    break;
                }
            }
            if(flag == 1)
            {
                a.add(arr[i]);
            }
        }
        
        System.out.println(a);
	}
}



// Solution_2 :  Optimize Code
class Solution{
    //Function to find the leaders in the array.
    static ArrayList<Integer> leaders(int arr[], int n){
        // Your code here
        ArrayList<Integer> answer = new ArrayList<>();
        
        int s = arr.length;
        
        answer.add(arr[s-1]);
        
        for(int j = n-2; j>=0; j--)
        {
            if(arr[j] >= answer.get(answer.size()-1))
            {
                answer.add(arr[j]);
            }
        }
        
        ArrayList<Integer> finalList = new ArrayList<>();
        for(int i = answer.size()-1; i>=0; i--)
        {
            finalList.add(answer.get(i));
        }
        return finalList;
    }
}
