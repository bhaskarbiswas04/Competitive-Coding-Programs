##--> Minimum number of jumps - GeeksforGeeks
Link--> https://practice.geeksforgeeks.org/problems/minimum-number-of-jumps-1587115620/1#


import java.util.*;

class solution
{
    public int function(int[] arr)
    {
        int n = arr.length;
        
        //base case
        if(n <= 1)
        {
            return 0;
        }
        if(arr[0] == 0)
        {
            return -1;
        }
        
        int maxReach = arr[0];
        int jump = 1;
        int step = arr[0];
        
        //Starts to move from position 1.
        for(int i = 1; i<n; i++)
        {
            if(i == (n-1))
            {
                return jump;
            }
            
            step--;
            maxReach = Math.max(maxReach, (i + arr[i]));
            
            if(step == 0)
            {
                jump++;
                
                if(maxReach <= i)
                {
                    return -1;
                }
                
                step = maxReach - i;
            }
        }
        return -1;
    }
}

public class maxJumps {
    public static void main(String[] args) {
        
        solution obj = new solution();

        // int size = 11;
        int[] array = {0,1,1,1,1};
        // int[] array = {2, 3, 2, 4, 4};

        int result = obj.function(array);
        System.out.println("Total number of jumps : "+ result);
    }
}